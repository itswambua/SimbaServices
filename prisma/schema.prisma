// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  phone         String?
  address       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  invoices      Invoice[]
}

model Booking {
  id          String   @id @default(cuid())
  customerId  String
  customer    Customer @relation(fields: [customerId], references: [id])
  service     String
  date        DateTime
  time        String
  address     String
  status      String   @default("pending")
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  invoices    Invoice[]
}

model Invoice {
  id         String   @id @default(cuid())
  invoiceId  String   @unique
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  bookingId  String?
  booking    Booking? @relation(fields: [bookingId], references: [id])
  amount     Float
  issueDate  DateTime @default(now())
  dueDate    DateTime
  status     String   @default("pending")
  notes      String?
  terms      String?
  items      String?  // JSON string of line items
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Email {
  id        String    @id @default(cuid())
  to        String
  subject   String
  content   String    @db.Text
  status    String    @default("draft")
  sentAt    DateTime?
  createdAt DateTime  @default(now())
}

model QuoteRequest {
  id           String   @id @default(cuid())
  name         String
  email        String
  phone        String?
  service      String
  propertySize String?
  message      String?
  status       String   @default("new") // new, contacted, quoted, converted, declined
  adminNotes   String?
  notes        String?
  submittedAt  DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([status])
  @@index([createdAt])
  @@index([email])
}

model Notification {
  id             String   @id @default(cuid())
  type           String   // booking, payment, invoice, review, system, customer, quote
  title          String
  message        String
  read           Boolean  @default(false)
  actionUrl      String?
  actionText     String?
  additionalInfo String?  // JSON string with additional data
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         String?  // For user-specific notifications

  @@index([read])
  @@index([type])
  @@index([createdAt])
  @@index([userId])
}